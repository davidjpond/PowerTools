{"ResultSet":[
~[tlist_sql;
SELECT s1.dcid
, s1.id
, s1.lastfirst
, s2.name
, a1.dcid
, a1.id
, to_char(a1.Att_Date, 'YYYY-MM-DD') att_date
, CASE
WHEN lower(a1.att_mode_code) = 'att_modemeeting' THEN 'Meeting'
WHEN lower(a1.att_mode_code) = 'att_modedaily' THEN 'Daily' END att_mode_code
, a1.CCID
, a1.PeriodID
, a2.att_code
, CASE
WHEN (
c1.insession = 0
OR c1.insession IS NULL)
AND a2.att_code IS NOT NULL
~[if.is.a.school]AND a1.schoolid = ~[v.curschoolid][/if.is.a.school]
THEN 'School is not in session'
WHEN (a1.att_date < s1.entrydate
OR a1.att_date >= s1.exitdate)
AND NOT EXISTS (
SELECT *
FROM reenrollments r1
WHERE a1.studentid = r1.studentid
AND a1.att_date >= r1.entrydate
AND a1.att_date < r1.exitdate)
~[if.is.a.school]AND a1.schoolid = ~[v.curschoolid][/if.is.a.school]
THEN 'Student not in school this day'
WHEN lower(a1.att_mode_code) = 'att_modemeeting'
~[if.is.a.school]AND a1.schoolid = ~[v.curschoolid][/if.is.a.school]
AND(
a1.att_date < c2.dateenrolled
OR
a1.att_date > c2.dateleft)
THEN 'Student not in section this day'
WHEN c3.letter NOT IN (
SELECT cycle_day_letter
FROM section_meeting s2
WHERE s2.sectionid = ABS(c2.sectionid))
AND lower(a1.att_mode_code) like 'att_modemeeting'
~[if.is.a.school]AND a1.schoolid = ~[v.curschoolid][/if.is.a.school]
THEN 'Section not in session this day'
ELSE 'Section not in session this period'
END error
FROM attendance a1
INNER JOIN students s1
ON a1.studentid = s1.id
LEFT JOIN schools s2
ON a1.schoolid = s2.school_number
LEFT JOIN attendance_code a2
ON a1.attendance_codeid = a2.id
LEFT JOIN calendar_day c1
ON a1.att_date = c1.date_value
AND a1.schoolid = c1.schoolid
LEFT JOIN cc c2
ON a1.ccid = c2.id
LEFT JOIN cycle_day c3
ON c1.cycle_day_id = c3.id
WHERE a2.att_code IS NOT NULL
           ~[if.~[gpv:frn]>0]
		  AND s1.id = ~(id)
				  [/if]
~[if.is.a.school]AND a1.schoolid = ~[v.curschoolid][/if.is.a.school]
~[if.~(gpv.curyearonly)=1]AND a1.yearid = trunc(~[v.curtermid]/100)[/if]
AND (
lower(a1.att_mode_code) like 'att_modemeeting'
AND (
c3.letter NOT IN (
SELECT cycle_day_letter
FROM section_meeting s2
WHERE s2.sectionid = ABS(c2.sectionid)
)
OR (
a1.periodid NOT IN (
SELECT p1.id
FROM period p1
, section_meeting s2
WHERE s2.sectionid = ABS(c2.sectionid)
AND s2.period_number = p1.period_number
AND s2.schoolid = p1.schoolid
)
)
OR (
a1.periodid NOT IN (
SELECT period_id
FROM bell_schedule_items b1
WHERE b1.bell_schedule_id = c1.bell_schedule_id
)
)
OR (
a1.att_date < c2.dateenrolled
OR a1.att_date > c2.dateleft
)
)
OR (
lower(a1.att_mode_code) = 'att_modedaily'
AND (
a1.att_date < s1.entrydate
OR a1.att_date >= s1.exitdate
)
AND NOT EXISTS (
SELECT *
FROM reenrollments r1
WHERE a1.studentid = r1.studentid
AND a1.att_date > r1.entrydate
AND r1.exitdate > a1.att_date
)
)
OR c1.insession = 0
OR (
c1.insession IS NULL
AND a2.att_code IS NOT NULL
)
)
ORDER BY s1.lastfirst
]
{
"dcid" : "~(s1.dcid)",
"studentid" : "~(s1.id)",
"student" : "~(lastfirst)",
"schoolName" : "~(name)",
"attendanceDcid" : "~(a1.dcid)",
"attendanceID" : "~(a1.id)",
"attendanceDate" : "~(date)",
"attendanceType" : "~(transtype)",
"ccID" : "~(CCID)",
"periodID" : "~(Periodid)",
"attendanceCode" : "~(att_code)",
"errormsg" : "~(error)"
},
[/tlist_sql]
{}
]}
