{"ResultSet":[
~[tlist_sql;
WITH allenrollments AS (
SELECT id as studid
, entrydate
, exitdate
FROM students
UNION ALL
SELECT studentid as studid
, entrydate
, exitdate
FROM reenrollments)
, enrollments AS (
SELECT studid
, CONNECT_BY_ROOT entrydate AS entrydate
, exitdate
, LEVEL
FROM allenrollments
CONNECT BY PRIOR studid = studid
AND PRIOR exitdate = entrydate
AND PRIOR entrydate != exitdate)
SELECT s1.dcid
, s1.id
, s1.lastfirst
, s2.name
, c1.course_number
, c1.section_number
, c2.course_name
, to_char(c1.dateenrolled, 'YYYY-MM-DD')
, to_char(c1.dateleft, 'YYYY-MM-DD')
FROM cc c1
INNER JOIN students s1
ON c1.studentid = s1.id
LEFT JOIN courses c2
ON c1.course_number = c2.course_number
LEFT JOIN schools s2
ON s1.schoolid = s2.school_number
WHERE NOT EXISTS (
SELECT *
FROM enrollments r1
WHERE c1.dateenrolled >= r1.entrydate
AND c1.dateenrolled <= r1.exitdate
AND c1.dateleft >= r1.entrydate
AND c1.dateleft <= r1.exitdate
AND c1.studentid = r1.studid)
~[if.is.a.school]AND c1.schoolid = ~[v.curschoolid][/if.is.a.school]
~[if.~(gpv.curyearonly)=1]AND trunc(abs(c1.termid)/100) = trunc(~[v.curtermid]/100)[/if]
          ~[if.~[gpv:frn]>0]
		  AND r1.studid = ~(id)
				  [/if]
ORDER BY s1.lastfirst
]
{
"dcid" : "~(s1.dcid)",
"studentid" : "~(s1.id)",
"student" : "~(s1.lastfirst)",
"schoolName" : "~(s2.name)",
"courseNumber" : "~(c1.Course_number)",
"sectionNumber" : "~(c1.Section_number)",
"courseName" : "~(c2.course_name)",
"dateEnrolled" : "~(c1.dateenrolled)",
"dateLeft" : "~(c1.dateleft)"
},
[/tlist_sql]
{}
]}
